server:
  port: 29000
spring:
  application:
    name: gateway-service
  cloud:
## consul 配置
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        service-name: ${spring.application.name}
        enabled: true     # 启用服务发现
        register: true      # 启用服务注册
        deregister: true      # 服务停止时取消注册
        prefer-ip-address: true     # 表示注册时使用IP而不是hostname
        health-check-interval: 30s      # 执行监控检查的频率
        health-check-critical-timeout: 30s      # 设置健康检查失败多长时间后，取消注册
        health-check-path: /actuator/info   # 健康检查的路径
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}:${random.value}  # 服务注册标识，格式为：应用名称+服务器IP+端口
    ## 网关配置
    gateway:
      routes:
        # order服务
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order-service/**
          filters:
            - StripPrefix=1
            - PrefixPath=/order-service
        # product服务
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/product-service/**
          filters:
            - StripPrefix=1
            - PrefixPath=/product-service
        # config-service demo测试
        - id: config-service-client
          uri: lb://config-service-client
          predicates:
            - Path=/config-service-client/**
          filters:
            - StripPrefix=1
            - PrefixPath=/config-service-client

        # config-service demo测试
        - id: discovery-client
          uri: lb://discovery-client
          predicates:
            - Path=/discovery-client/**
          filters:
            - StripPrefix=1
            - PrefixPath=/discovery-client
  # zip配置
  zipkin:
    base-url: http://localhost:28001          # zipkin server的请求地址
    sender:
      type: web       # web 客户端将踪迹日志数据通过网络请求的方式传送到服务端，另外还有配置 # kafka/rabbit 客户端将踪迹日志数据传递到mq进行中转
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1      # 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采集
logging:
  level:
    org.springframework.web.servlet.DispatcherServlet: INFO    # 添加分布式链路追踪日志级别
    org.springframework.cloud.sleuth: INFO